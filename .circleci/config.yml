version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
  aws-ecs: circleci/aws-ecs@0.0.10
  slack: circleci/slack@3.4.2
workflows:
  app-build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: ECR_DOMAIN
          dockerfile: ./docker/app/Dockerfile
          repo: "${AWS_RESOURCE_NAME_PREFIX}-image"
          region: AWS_DEFAULT_REGION
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_DEFAULT_REGION
          family: "go-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-ecs-cluster"
          container-image-name-updates: "container=trading-go,tag=${CIRCLE_SHA1}"
          container-env-var-updates: "container=trading-go,name=API_KEY,value=${API_KEY},container=trading-go,name=API_SECRET,value=${API_SECRET},container=trading-go,name=DB_HOST,value=${DB_HOST},container=trading-go,name=API_KEY,value=${API_KEY},container=trading-go,name=DB_PASSWORD,value=${DB_PASSWORD}"
      - slack/status:
          success_message: ':circleci-pass: $CIRCLE_BRANCH のデプロイが完了しました\n:github_octocat: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-fail: $CIRCLE_BRANCH のデプロイが失敗しました\n:github_octocat: User：$CIRCLE_USERNAME'
          webhook: webhook
  nginx-build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: ECR_DOMAIN
          dockerfile: ./docker/nginx/Dockerfile
          repo: nginx-image
          region: AWS_DEFAULT_REGION
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_DEFAULT_REGION
          family: "nginx-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-ecs-cluster"
          container-image-name-updates: "container=trading-nginx,tag=${CIRCLE_SHA1}"
